<#

include "Templates/Utilities.tpl"
include "Templates/VbNetNh/UtilitiesVb.tpl"

message "Creating Directories..."

FileManager.CreateDirectory(Project.BuildDir)
FileManager.CreateDirectory("${Project.BuildDir}/Sql")
FileManager.CreateDirectory("${Project.BuildDir}/Src/AjNHibernate")
FileManager.CreateDirectory("${Project.BuildDir}/Src/Libraries")
FileManager.CreateDirectory("${Project.BuildDir}/Src/${Project.Name}.Entities")
FileManager.CreateDirectory("${Project.BuildDir}/Src/${Project.Name}.Data")
FileManager.CreateDirectory("${Project.BuildDir}/Src/${Project.Name}.Services")
FileManager.CreateDirectory("${Project.BuildDir}/Src/${Project.Name}.WebClient")
FileManager.CreateDirectory("${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls")

message "Configuring NHibernate..."

if not Technology.NHibernate then
	Technology.NHibernate = CreateObject()
end if

if not Technology.NHibernate.Dialect then
	if Technology.Database.Dialect = "MsSql" then
		Technology.NHibernate.Dialect = "NHibernate.Dialect.MsSql2000Dialect"
	end if
end if

if not Technology.NHibernate.Driver then
	if Technology.Database.Dialect = "MsSql" then
		Technology.NHibernate.Driver = "NHibernate.Driver.SqlClientDriver"
	end if
end if

if not Technology.NHibernate.ConnectionString then
	if Technology.Database.Dialect = "MsSql" then
		Technology.NHibernate.ConnectionString = "server=${Technology.Database.Host};database=${Technology.Database.Name};uid=${Technology.Database.Username};pwd=${Technology.Database.Password}"
	end if
end if

message "Defining Solution and Projects..."

Project.Solution = CreateObject()
Project.Solution.Guid = "F184B08F-C81C-45F6-A57F-5ABD9991F28F"

Project.Solution.Projects = CreateList()

message "Defining Entities Project..."

PrjEntities = CreateObject()
PrjEntities.Name = "${Project.Name}.Entities"
PrjEntities.Directory = "${Project.BuildDir}/Src/${Project.Name}.Entities"
PrjEntities.Includes = CreateList()
PrjEntities.Guid = CreateGuid()

Project.Solution.Projects.Add(PrjEntities)

PrjData = CreateObject()
PrjData.Name = "${Project.Name}.Data"
PrjData.Directory = "${Project.BuildDir}/Src/${Project.Name}.Data"
PrjData.Includes = CreateList()
PrjData.Projects = CreateList()
PrjData.Guid = CreateGuid()

Project.Solution.Projects.Add(PrjData)

PrjServices = CreateObject()
PrjServices.Name = "${Project.Name}.Services"
PrjServices.Directory = "${Project.BuildDir}/Src/${Project.Name}.Services"
PrjServices.Includes = CreateList()
PrjServices.Projects = CreateList()
PrjServices.Guid = CreateGuid()

Project.Solution.Projects.Add(PrjServices)

PrjWeb = CreateObject()
PrjWeb.Name = "${Project.Name}.WebClient"
PrjWeb.Directory = "${Project.BuildDir}/Src/${Project.Name}.WebClient"
PrjWeb.Includes = CreateList()
PrjWeb.Projects = CreateList()
PrjWeb.Guid = CreateGuid()
PrjWeb.ProjectType = "Web"

Project.Solution.Projects.Add(PrjWeb)

PrjAjNh = CreateObject()
PrjAjNh.Name = "AjNHibernate"
PrjAjNh.Directory = "${Project.BuildDir}/Src/AjNHibernate"
PrjAjNh.Includes = CreateList()
PrjAjNh.Libraries = CreateList()
PrjAjNh.Projects = CreateList()
PrjAjNh.Guid = CreateGuid()
PrjAjNh.UseWeb = true

PrjAjNh.Includes.Add(CreateFileVb("Repository"))
PrjAjNh.Includes.Add(CreateFileVb("SessionFactory"))
PrjAjNh.Includes.Add(CreateFileVb("SessionHttpModule"))
TransformerManager.Transform("Templates/VbNetNh/SessionFactory.tpl", "${PrjAjNh.Directory}/SessionFactory.vb", Environment)
FileManager.CopyFile("${WorkingDir}SourceCode/AjNHibernate/Repository.vb","${PrjAjNh.Directory}/Repository.vb")
FileManager.CopyFile("${WorkingDir}SourceCode/AjNHibernate/SessionHttpModule.vb","${PrjAjNh.Directory}/SessionHttpModule.vb")
PrjAjNh.Libraries.Add(CreateFileLib("NHibernate","..\Libraries\NHibernate.dll"))

Project.Solution.Projects.Add(PrjAjNh)

PrjServices.Projects.Add(PrjEntities)
PrjServices.Projects.Add(PrjData)

PrjData.Projects.Add(PrjEntities)
PrjData.Projects.Add(PrjAjNh)

PrjWeb.Projects.Add(PrjEntities)
PrjWeb.Projects.Add(PrjServices)

message "Processing Entities..."

for each Entity in Project.Model.Entities
	PrintLine "Entidad " + Entity.Name
	
	for each Property in Entity.Properties
		if not Property.Description then
			Property.Description = Property.Name
		end if
	end for
	
	TransformerManager.Transform("Templates/VbNetNh/EntityVb.tpl","${Project.BuildDir}/Src/${Project.Name}.Entities/${Entity.Name}.vb",Environment)
	PrjEntities.Includes.Add(CreateFileVb("${Entity.Name}"))
	TransformerManager.Transform("Templates/VbNetNh/EntityDAOVb.tpl","${Project.BuildDir}/Src/${Project.Name}.Data/${Entity.Name}DAO.vb",Environment)
	PrjData.Includes.Add(CreateFileVb("${Entity.Name}DAO"))
	TransformerManager.Transform("Templates/VbNetNh/EntityNh.tpl","${Project.BuildDir}/Src/${Project.Name}.Data/${Entity.Name}.hbm.xml",Environment)
	PrjData.Includes.Add(CreateFileType(Entity.Name,"hbm.xml"))
	TransformerManager.Transform("Templates/VbNetNh/EntityWebVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.Name}.aspx",Environment)
	PrjWeb.Includes.Add(CreateFileAspx("${Entity.Name}"))
	TransformerManager.Transform("Templates/VbNetNh/EntityCodeWebVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.Name}.aspx.vb",Environment)
	PrjWeb.Includes.Add(CreateFileAspxVb("${Entity.Name}"))
	PrjWeb.Includes.Add(CreateFileAspxResx("${Entity.Name}"))
	TransformerManager.Transform("Templates/VbNetNh/EntitySetWebVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.SetName}.aspx",Environment)
	PrjWeb.Includes.Add(CreateFileAspx("${Entity.SetName}"))
	TransformerManager.Transform("Templates/VbNetNh/EntitySetCodeWebVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.SetName}.aspx.vb",Environment)
	PrjWeb.Includes.Add(CreateFileAspxVb("${Entity.SetName}"))
	PrjWeb.Includes.Add(CreateFileAspxResx("${Entity.SetName}"))

	TransformerManager.Transform("Templates/VbNetNh/EntityFormWebVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.Name}Update.aspx",Environment)
	PrjWeb.Includes.Add(CreateFileAspx("${Entity.Name}Update"))
	TransformerManager.Transform("Templates/VbNetNh/EntityFormCodeWebVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.Name}Update.aspx.vb",Environment)
	PrjWeb.Includes.Add(CreateFileAspxVb("${Entity.Name}Update"))
	PrjWeb.Includes.Add(CreateFileAspxResx("${Entity.Name}Update"))

	TransformerManager.Transform("Templates/VbNet/EntityDeleteWebVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.Name}Delete.aspx",Environment)
	PrjWeb.Includes.Add(CreateFileAspx("${Entity.Name}Delete"))
	TransformerManager.Transform("Templates/VbNet/EntityDeleteCodeWebVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.Name}Delete.aspx.vb",Environment)
	PrjWeb.Includes.Add(CreateFileAspxVb("${Entity.Name}Delete"))
	PrjWeb.Includes.Add(CreateFileAspxResx("${Entity.Name}Delete"))

	FileManager.CopyFile("${WorkingDir}Templates/VbNetNh/Resx.txt","${Project.BuildDir}/Src/${Project.Name}.WebClient/${Entity.Name}Update.aspx.resx")
	TransformerManager.Transform("Templates/VbNetNh/EntityServiceVb.tpl","${Project.BuildDir}/Src/${Project.Name}.Services/${Entity.Name}Service.vb",Environment)
	PrjServices.Includes.Add(CreateFileVb("${Entity.Name}Service"))
end for

TransformerManager.Transform("Templates/VbNetNh/HeaderAscx.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Header.ascx",Environment)
TransformerManager.Transform("Templates/VbNetNh/HeaderAscxVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Header.ascx.vb",Environment)
FileManager.CopyFile("${WorkingDir}Templates/VbNetNh/Resx.txt","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Header.ascx.resx")
PrjWeb.Includes.Add(CreateFileAscx("Header"))

TransformerManager.Transform("Templates/VbNetNh/FooterAscx.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Footer.ascx",Environment)
TransformerManager.Transform("Templates/VbNetNh/FooterAscxVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Footer.ascx.vb",Environment)
FileManager.CopyFile("${WorkingDir}Templates/VbNetNh/Resx.txt","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Footer.ascx.resx")
PrjWeb.Includes.Add(CreateFileAscx("Footer"))

TransformerManager.Transform("Templates/VbNetNh/TitleAscx.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Title.ascx",Environment)
TransformerManager.Transform("Templates/VbNetNh/TitleAscxVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Title.ascx.vb",Environment)
FileManager.CopyFile("${WorkingDir}Templates/VbNetNh/Resx.txt","${Project.BuildDir}/Src/${Project.Name}.WebClient/Controls/Title.ascx.resx")
PrjWeb.Includes.Add(CreateFileAscx("Title"))

TransformerManager.Transform("Templates/VbNetNh/GlobalAsax.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Global.asax",Environment)
TransformerManager.Transform("Templates/VbNetNh/GlobalAsaxVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Global.asax.vb",Environment)
TransformerManager.Transform("Templates/VbNetNh/GlobalAsaxResx.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Global.asax.resx",Environment)

TransformerManager.Transform("Templates/VbNetNh/DefaultAspx.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Default.aspx",Environment)
TransformerManager.Transform("Templates/VbNetNh/DefaultAspxVb.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Default.aspx.vb",Environment)
FileManager.CopyFile("${WorkingDir}Templates/VbNetNh/Resx.txt","${Project.BuildDir}/Src/${Project.Name}.WebClient/Default.aspx.resx")

TransformerManager.Transform("Templates/VbNetNh/WebConfig.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Web.config",Environment)
TransformerManager.Transform("Templates/VbNetNh/StylesCss.tpl","${Project.BuildDir}/Src/${Project.Name}.WebClient/Styles.css",Environment)

for each VbProject in Project.Solution.Projects
	TransformerManager.Transform("Templates/VbNetNh/VbProject.tpl", "${VbProject.Directory}/${VbProject.Name}.vbproj", Environment)
end for

TransformerManager.Transform("Templates/VbNetNh/Solution.tpl", "${Project.BuildDir}/Src/${Project.Name}.sln", Environment)

#>